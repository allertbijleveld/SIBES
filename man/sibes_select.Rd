% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sibes_select.R
\name{sibes_select}
\alias{sibes_select}
\title{sibes_select
allows convenient #filtering of a dataset by any number of logical filters.
For example, this function can be used to easily filter timestamps in a range,
as well as combine simple spatial and temporal filters.
It accepts a character vector of \code{R} expressions that each return a
logical vector (i.e., \code{TRUE} or \code{FALSE}).
Each filtering condition is interpreted in the context of the dataset
supplied, and used to filter for rows that satisfy each of the filter conditions.
Users must make sure that the filtering variables exist in their dataset in
order to avoid errors.}
\usage{
sibes_select(data, filters = c())
}
\arguments{
\item{data}{A tibble, dataframe or similar containing the variables to be filtered.}

\item{filters}{A character vector of filter expressions. An example might be
\code{"sampling_station_id < 1000"}. The filtering variables must be in the dataframe.
The function will not explicitly check whether the filtering variables are
present; This makes it flexible, allowing expressions such as
\code{"between(sampling_station_id, 2, 2000)"}, but also something to use at your own risk.
A missing filter variables \emph{will} result in an empty data frame.}
}
\value{
A dataframe filtered using the filters specified.
}
\description{
sibes_select
allows convenient #filtering of a dataset by any number of logical filters.
For example, this function can be used to easily filter timestamps in a range,
as well as combine simple spatial and temporal filters.
It accepts a character vector of \code{R} expressions that each return a
logical vector (i.e., \code{TRUE} or \code{FALSE}).
Each filtering condition is interpreted in the context of the dataset
supplied, and used to filter for rows that satisfy each of the filter conditions.
Users must make sure that the filtering variables exist in their dataset in
order to avoid errors.
}
\examples{

data_list <- get('SIBES_dataset')

data_m <- sibes_merge(Inputdata = data_list)

data_selected_3 <- sibes_select(data = data_m, filters =c(
"between(sampling_station_id, 320,371)", #Location
"between(date,as.Date(\"2010-01-01\",format=\"\%Y-\%m-\%d\"),
 as.Date(\"2020-08-11\",format=\"\%Y-\%m-\%d\"))"))#Date

}
